def fetch_ec2_backups(client):
  ec2_list_from_ec2console = []
  data = []

  # Get instance data
  response = client.describe_instances()
  for reservation in response:
      for instance in reservation['Instances']:
          print(instance)
    # Extract instance ID and store it
          instance_id = instance['InstanceId']
          ec2_list_from_ec2console.append(instance_id)
          # Check for backups using AWS Backup service
          backup_client = boto3.client('backup')
          filters = {'ResourceType': ['EC2'], 'ResourceId': [instance_id]}
          # try:
          response = backup_client.list_backup_jobs(Filters=filters)
          latest_backup = None
          for backup_job in response['BackupJobs']:
             if not latest_backup or backup_job['CompletionTime'] > latest_backup['CompletionTime']:
                latest_backup = backup_job
                
                
                backup_status = 'No completed backup' if not latest_backup else 'Backup Completed'
                latest_backup_time = 'N/A' if not latest_backup else latest_backup['CompletionTime'].strftime('%Y-%m-%d %H:%M:%S')
                backup_age = 'N/A' if not latest_backup else ('Latest' if datetime.now(datetime.UTC) - latest_backup < timedelta(hours=24) else 'Old')
