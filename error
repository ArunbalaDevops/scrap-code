lamda-test

Response
{
  "errorMessage": "Syntax error in module 'lambda_function': expected an indented block after 'if' statement on line 41 (lambda_function.py, line 42)",
  "errorType": "Runtime.UserCodeSyntaxError",
  "requestId": "aa4b40a6-5d3a-44d6-9eee-984c4aec10de",
  "stackTrace": [
    "  File \"/var/task/lambda_function.py\" Line 42\n                        latest_backup = backup_job\n"
  ]
}

Function Logs
START RequestId: aa4b40a6-5d3a-44d6-9eee-984c4aec10de Version: $LATEST
LAMBDA_WARNING: Unhandled exception. The most likely cause is an issue in the function code. However, in rare cases, a Lambda runtime update can cause unexpected function behavior. For functions using managed runtimes, runtime updates can be triggered by a function change, or can be applied automatically. To determine if the runtime has been updated, check the runtime version in the INIT_START log entry. If this error correlates with a change in the runtime version, you may be able to mitigate this error by temporarily rolling back to the previous runtime version. For more information, see https://docs.aws.amazon.com/lambda/latest/dg/runtimes-update.html
[ERROR] Runtime.UserCodeSyntaxError: Syntax error in module 'lambda_function': expected an indented block after 'if' statement on line 41 (lambda_function.py, line 42)
Traceback (most recent call last):
  File "/var/task/lambda_function.py" Line 42
                        latest_backup = backup_jobEND RequestId: aa4b40a6-5d3a-44d6-9eee-984c4aec10de
REPORT RequestId: aa4b40a6-5d3a-44d6-9eee-984c4aec10de	Duration: 3.07 ms	Billed Duration: 4 ms	Memory Size: 128 MB	Max Memory Used: 35 MB	Init Duration: 81.17 ms
